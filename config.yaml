maintainer: Dhanoop Karunakaran
debug: False
dir: '/app/pdfs'
GOOGLE_API:
  no_emails: 80
  subjects:
    - 'FDC Invoice Dev'
    - 'Your Energy Locals Urban Invoice'
    - 'Sydney Water eBill'
    - 'Uniti Retail Pty Ltd - Invoice' # it has attachment, but email body contains info clear
    - 'Telstra Upfront Mobile Plan'
    - 'Strata Plan100063 91 GRIMA STREET'
  # Each subject should have a payment method
  payment_methods:
    - 'Manual'
    - 'Direct Debit'
    - 'Bpay'
    - 'Manual'
    - 'Credit Card'
    - 'Bpay'
  # Each subject should have a download method
  download_methods:
    - 'attachment'
    - 'attachment'
    - 'email_body'
    - 'email_body' 
    - 'google_drive_file'
    - 'attachment'
  senders:
    - 'mariaka1@me.com'
    - 'dhanooponline@gmail.com'
    - 'sender@sydneywater.com.au'
    - 'support@unitiinternet.com'
    - 'google_drive_file'
    - 'notices@netstrata.com.au'
  scopes:
    - 'https://www.googleapis.com/auth/gmail.readonly'
    - 'https://www.googleapis.com/auth/tasks'
    - 'https://www.googleapis.com/auth/drive'
  no_of_drive_files: 20
  drive_folder_name: 'track_my_bill_content'
ollama:
  host: 'http://192.168.0.160:11434' #'http://127.0.0.1:11434'
  model: 'llama-3.2-3B-instruct-q8-invoice:latest' #'llama3.1:8b'
  template: "
        Your task is to extract invoice data from the text '{context}'.

        Reply Structures:
        - Amount 
        - Due_date 
        - Biller_name   

        Reply with valid json. Please make sure Due_date is in year-month-day format and Biller_name has only a few words. Please do not add list or dict as value to Biller_name. 
      "
sql_alchemy:
  loc: '/app/data'
  db: 'data.db'
invoice_agent:
  host: 'http://192.168.0.160:11434' #'http://127.0.0.1:11434'
  model_for_API_tool: 'qwen2:7b-instruct-q8_0'
  prompt_for_API_tools: "Assistant is a large language model designed to analyze and compare structured data, such as bank information.
    Assistant can effectively identify similarities and discrepancies within and across datasets. 
    By processing and understanding the provided bank information, Assistant can accurately determine if two sets of data are same. 
    If the comparison reveals that the data is the same, Assistant will be instructed to utilize a specific tool designed for handling same data. 
    Conversely, if the data comparison reveals any differences, Assistant will be directed to utilize a different tool specifically designed for 
    different. 

    Please make sure whenever you call the tools, pass both data as arguments.
    
    For example:
    Example 1: Existing data:'256954,55,170900069,anything' and new data:'256954,7,170900069,BPay1'
    Expected tool: call the tool that takes the different data

    Example 2: Existing data:'256954,55,170900069,BPay1' and new data:'256954,55,170900069,BPay1'
    Expected tool: call the tool that takes the same data. 
    "

  prompt_for_bank_info: "extract the payment details from the content added below and put the result in a JSON format and do not add any addition text. 
    For BPay payment, json should contain biller_code and reference_number.
    For bank details, json should contain bsb and account_number.
    no need of any other details including payment details key. But specify whether it is a bank account, BPay, or credit card as type in the JSON result.
    content is as follows: 
    "